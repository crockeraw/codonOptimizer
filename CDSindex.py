from Bio import SeqIO
from Bio.SeqUtils import GC
from Bio.SeqUtils.CodonUsage import CodonAdaptationIndex
import os

records = []
for record in SeqIO.parse("source-data/CDS.fna", "fasta"):
    if len(record.seq)%3 != 0:
        pass
    elif "N" in str(record.seq):
        pass
    else:
        records.append(record)

os.system("mkdir derived-data")

SeqIO.write(records, "derived-data/CDS_div_by3.fna", "fasta")

index = CodonAdaptationIndex()
index.generate_index("derived-data/CDS_div_by3.fna")

# Values of 1 is preferred codon. Otherwise, relative to preffered.
preferred_codons_dict = index.index
locs = np.where(np.array(list(preferred_codons_dict.values())) == 1.0)[0]
pref = {}
for i in locs:
    key = list(index.index.keys())[int(i)]
    val = Bio.Seq.translate(key)
    pref[val] = key

#import pandas as pd
#pref_df = pd.DataFrame(preferred_codons_dict)

import csv
with open('derived-data/Ap_preferred_codons.csv', 'w') as f:
    for key in preferred_codons_dict.keys():
        f.write("%s,%s\n"%(key,preferred_codons_dict[key]))

for rec in SeqIO.parse("source-data/StayGold.fasta", "fasta"):
    staygold = rec

goldseq = str(staygold.seq)

index.cai_for_gene(goldseq)

opt_staygold = ''
for i in range(0,len(goldseq),3):
    codon = goldseq[i:i+3]
    aa = Bio.Seq.translate(codon)
    pref_codon = pref[aa]
    opt_staygold = opt_staygold + pref_codon
    
index.cai_for_gene(opt_staygold)

opt_sg_record = Bio.SeqRecord.SeqRecord(Bio.Seq.Seq(opt_staygold))
opt_sg_record.id = "A. pullulans Codon Optimized StayGold"
opt_sg_record.description = "generated by Noah and Alex from GenBank: LC601652.1 by changing all codons to Ap preferred codons"

SeqIO.write(opt_sg_record, "derived-data/staygold_codonOptimized.fna", "fasta")